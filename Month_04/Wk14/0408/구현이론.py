'''
아이디어를 코드로 바꾸는 구현

-피지컬로 승부하기-
코딩 테스트에서 구현이란 '머릿속에 있는 알고리즘을 소스코드로 바꾸는 과정'이다.
어떤 문제를 풀든 간에 소스코드를 작성하는 과정은 필수이므로 구현 문제 유형은
모든 범위의 코딩 테스트 문제 유형을 포함하는 개념이다.

구현문제의 유형은 아래와 같다
완전 탐색
    - 모든 경우의 수를 주저 없이 다 계산하는 해결 방법
시뮬레이션
    - 문제에서 제시한 알고리즘을 한 단계씩 직접 수행하는 문제

-구현 시 고려해야 할 메모리 제약 사항-
리스트의 크기 제약
파이썬에서는 여러 개의 변수를 사용할 때 리스트를 사용한다.
파이썬에서 리스트를 이용할 때, 코딩테스트의 메모리 제한을 고려해야 한다.
대체로 코딩테스트에서는 128 ~ 512MB로 메모리를 제한하는데
알고리즘 문제 중 때로는 수백만 개 이상의 데이터를 처리해야 하는 문제가 출제되곤 한다.
이럴 대는 메모리 제한을 염두 해 두고 코딩해야 한다.

    int 기준 자료형 데이터 개수에 따른 메모리 사용량
    1,000 = 4KB
    1,000,000 = 4MB
    10,000,000 = 40MB

파이썬은 다른 언어에 비해서 구현상의 복잡함은 적은 편이지만 
데이터 처리량이 많을 때는 꼭 메모리 제한을 고려해보도록 하자
리스트를 여러개 선언하고 그 중에서 크기가 1000만 이상인 리스트가 있다면
메모리 용량 제한으로 문제를 풀 수 없게 되는 경우도 있다는 점을 기억하자.
하지만 일반적인 코딩 테스트 숮둔에서는 메모리 사용량 제한보다 
더 적은 크기의 메모리를 사용해야 한다는 점 정도만 기억하자

-채점 환경-
실제 테스트환경에서는 다음과 같은 채점 시스템의 시간 제한 및 메모리 제한 정보가 적혀 있다.
    - 시간 제한 : 1초
    - 메모리 제한 : 128MB
파이썬은 동작속도가 C/C++에 비해 느리다.
파이썬3.7기준 1초에 2000만번 정도의 연산을 수행한다고 가정하고 문제를 풀면 실행 시간 제한에 안정적이다.


'''